{"version":3,"file":"pages/sokutore.js","sources":["webpack:///./pages/sokutore.vue?3f10","webpack:///./pages/sokutore.vue","webpack:///./pages/sokutore.vue?c7a2","webpack:///./pages/sokutore.vue?2c94","webpack:///./pages/sokutore.vue?f8df","webpack:///./pages/sokutore.vue?9243","webpack:///./pages/sokutore.vue?ec74"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"columns is-mobile is-centered\",staticStyle:{\"width\":\"100%\",\"height\":\"97%\",\"margin\":\"0\"}},[_vm._ssrNode(\"<div class=\\\"column is-4-tablet is-11-mobile\\\"><div class=\\\"columns is-mobile is-multiline is-centered is-vcentered\\\"><div class=\\\"column is-12 wrapper-content mb-3 tategaki-wrapper\\\"><div\"+(_vm._ssrClass(\"sokutore-wrapper tategaki pt-3 pb-1\",_vm.fontsize))+(_vm._ssrStyle(null,_vm.height, null))+\">\"+((_vm.highlightVer == '1列ハイライト')?((_vm._ssrList((_vm.lines),function(i){return (\"<div class=\\\"trimmed-wrapper\\\"\"+(_vm._ssrStyle({\"cursor\":\"default\"},_vm.width, null))+\"><span\"+(_vm._ssrStyle(null,_vm.highlightStyle1[i - 1], null))+\">\"+_vm._ssrEscape(_vm._s(_vm.highlightChara1[_vm.page * _vm.lines + i - 1]))+\"</span> <span>\"+_vm._ssrEscape(_vm._s(_vm.trimmed1[_vm.page * _vm.lines + i - 1]))+\"</span> <span\"+(_vm._ssrClass(null,_vm.lastSpace[i - 1]))+(_vm._ssrStyle(null,_vm.highlightStyle2[i - 1], null))+\">\"+_vm._ssrEscape(_vm._s(_vm.highlightChara2[_vm.page * _vm.lines + i - 1]))+\"</span></div>\")}))):((_vm._ssrList((_vm.lines),function(i){return (\"<div class=\\\"trimmed-wrapper\\\"\"+(_vm._ssrStyle({\"cursor\":\"default\"},_vm.width, null))+\"><span>\"+_vm._ssrEscape(_vm._s(_vm.trimmed1[_vm.page * _vm.lines + i - 1]))+\"</span> <span\"+(_vm._ssrStyle(null,_vm.highlightStyle1[i - 1], null))+\">\"+_vm._ssrEscape(_vm._s(_vm.highlightChara1[_vm.page * _vm.lines + i - 1]))+\"</span> <span>\"+_vm._ssrEscape(_vm._s(_vm.trimmed2[_vm.page * _vm.lines + i - 1]))+\"</span> <span\"+(_vm._ssrStyle(null,_vm.highlightStyle2[i - 1], null))+\">\"+_vm._ssrEscape(_vm._s(_vm.highlightChara2[_vm.page * _vm.lines + i - 1]))+\"</span> <span>\"+_vm._ssrEscape(_vm._s(_vm.trimmed3[_vm.page * _vm.lines + i - 1]))+\"</span> <span\"+(_vm._ssrStyle(null,_vm.highlightStyle3[i - 1], null))+\">\"+_vm._ssrEscape(_vm._s(_vm.highlightChara3[_vm.page * _vm.lines + i - 1]))+\"</span> <span>\"+_vm._ssrEscape(_vm._s(_vm.trimmed4[_vm.page * _vm.lines + i - 1]))+\"</span></div>\")}))))+\"</div> <div class=\\\"is-size-7 has-text-centered\\\">\"+_vm._ssrEscape(_vm._s((_vm.page + 1) +'/'+_vm.length))+\"</div></div> <div class=\\\"column is-12 wrapper-content\\\"><div class=\\\"columns is-mobile is-vcentered\\\"><div class=\\\"column is-6 has-text-left\\\"><span id=\\\"sokutore_button\\\" class=\\\"p-2 is-size-7\\\">&lt; 次へ</span></div> <div class=\\\"column is-6 has-text-right\\\"><span id=\\\"sokutore_button\\\" class=\\\"p-2 is-size-7\\\">最初に戻る &gt;|</span></div></div></div></div></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  layout: 'defaultContent',\n  data () {\n    return {\n      bookTitle: '',\n      body: '',\n      trimmed1: [],\n      trimmed2: [],\n      trimmed3: [],\n      trimmed4: [],\n      highlightChara1: [],\n      highlightChara2: [],\n      highlightChara3: [],\n      highlightStyle1: [],\n      highlightStyle2: [],\n      highlightStyle3: [],\n      lastSpace: [],\n      width: {},\n      page: 0,\n      length: 0,\n      charaLeftSum: 0,\n      intervalId: undefined,\n      fontsize: '',\n      charaLen: 0,\n      lines: 0,\n      nowline: 0,\n      speed: 50\n    }\n  },\n  computed: {\n    highlightVer: function () {\n      return this.$store.state.data.highlightStyle\n    },\n    displayTrimmed: function (i) {\n      return this.trimmed[this.page * this.lines + i - 1]\n    },\n    tategakiHeight: function () {\n      if (window.innerWidth > 768) {\n        return 0.97 * (window.innerHeight - 58) - 132\n      } else {\n        return 0.97 * (window.innerHeight - 80) - 108\n      }\n    },\n    height: function () {\n      return `height: ${this.tategakiHeight}px;`\n    }\n  },\n  async mounted () {\n    this.speed = this.$store.state.data.sokutoreSpeed/* スピードをvuexから取得します。 */\n    /* 文字サイズを設定します。 */\n    if (this.$store.state.data.fontsize === 'small') {\n      this.fontsize = 'is-size-7'\n      this.width.width = '24px'\n      this.lines = window.innerWidth < 769 ? Math.floor(window.innerWidth * 0.03803) : Math.floor(window.innerWidth * 0.01341)\n    } else if (this.$store.state.data.fontsize === 'medium') {\n      this.fontsize = 'is-size-6'\n      this.width.width = '32px'\n      this.lines = window.innerWidth < 769 ? Math.floor(window.innerWidth * 0.02679) : Math.floor(window.innerWidth * 0.009 + 1)\n    } else {\n      this.fontsize = 'is-size-5'\n      this.width.width = '40px'\n      this.lines = window.innerWidth < 769 ? Math.floor(window.innerWidth * 0.02232) : Math.floor(window.innerWidth * 0.00746)\n    }\n    const bookList = this.$store.state.data.bookList.concat(this.$store.state.data.userBookList)\n    const bookContent = this.$store.state.data.bookContent.concat(this.$store.state.data.userBookContent)\n    this.bookTitle = bookList[this.$store.state.data.bookIndex]\n    this.body = bookContent[this.$store.state.data.bookIndex]\n    this.$nuxt.$emit('updateRef', 'sokutore-top')/* navbarの戻るボタンの遷移先の受け渡し */\n    this.$nuxt.$emit('updateTitle', this.bookTitle)/* navbarのタイトルの受け渡し */\n    /* 本の中身を1行ごとに分割します */\n    if (this.fontsize === 'is-size-7') {\n      this.charaLen = Math.floor(this.tategakiHeight * 0.07675)\n      this.bodySlice()\n    } else if (this.fontsize === 'is-size-6') {\n      this.charaLen = Math.floor(this.tategakiHeight * 0.05907)\n      this.bodySlice()\n    } else {\n      this.charaLen = Math.floor(this.tategakiHeight * 0.04922 - 1.966)\n      this.bodySlice()\n    }\n    /* 全ページ数と現在ページの表示を設定します。 */\n    this.length = Math.floor((this.trimmed1.length / this.lines) + 1)\n    /* 最初のページのハイライト表示を開始します。 */\n    this.highlight()\n  },\n  destroyed () {\n    clearInterval(this.intervalId)\n    let charaLeftSumTmp = 0\n    if (this.highlightVer === '1列ハイライト') {\n      for (let i = 0; i < this.page * this.lines; i++) {\n        if (this.trimmed1[i].length < this.charaLen - 2) {\n          charaLeftSumTmp += this.charaLen - this.highlightChara1[i].length - this.trimmed1[i].length - this.highlightChara2[i].length - 1\n        }\n      }\n    } else if (this.highlightVer === '1列2分割ハイライト') {\n      for (let i = 0; i < this.page * this.lines; i++) {\n        if (this.trimmed1[i].length + this.trimmed2[i].length + this.trimmed3[i].length < this.charaLen - 2) {\n          charaLeftSumTmp += this.charaLen - this.trimmed1[i].length - this.highlightChara1[i].length - this.trimmed2[i].length - this.highlightChara2[i].length - this.trimmed3[i].length - 1\n        }\n      }\n    } else {\n      for (let i = 0; i < this.page * this.lines; i++) {\n        if (this.trimmed1[i].length + this.trimmed2[i].length + this.trimmed3[i].length + this.trimmed4[i].length < this.charaLen - 3) {\n          charaLeftSumTmp += this.charaLen - this.trimmed1[i].length - this.highlightChara1[i].length - this.trimmed2[i].length - this.highlightChara2[i].length - this.trimmed3[i].length - this.highlightChara3[i].length - this.trimmed4[i].length - 1\n        }\n      }\n    }\n    this.$store.commit('data/changePage', [1, this.page * this.lines * this.charaLen - charaLeftSumTmp])\n  },\n  methods: {\n    bodySlice () {\n      const nowCharaNum = this.$store.state.data.charaIndexs[this.$store.state.data.bookIndex][1]\n      let charaNum = 0\n      let endFlag = false\n      let newlineFlag = false\n      let checked = false\n      if (this.highlightVer === '1列ハイライト') {\n        while (true) {\n          newlineFlag = false\n          // 1行の文字数分先の間に改行がないかと文章の最後の文字がないかをチェックします\n          for (let i = 0; i < this.charaLen; i++) {\n            // 改行があれば次の行へ\n            if (this.body[charaNum + i] === ' ') {\n              if (i === 0) {\n                this.highlightChara1.push('')\n                this.trimmed1.push('')\n                this.highlightChara2.push('')\n              } else if (i === 1) {\n                this.highlightChara1.push(this.body[charaNum])\n                this.trimmed1.push('')\n                this.highlightChara2.push('')\n              } else if (i === 2) {\n                this.highlightChara1.push(this.body[charaNum])\n                this.trimmed1.push('')\n                this.highlightChara2.push(this.body[charaNum + 1])\n              } else if (i > 2) {\n                this.highlightChara1.push(this.body[charaNum])\n                this.trimmed1.push(this.body.slice(charaNum + 1, charaNum + i - 1))\n                this.highlightChara2.push(this.body[charaNum + i - 1])\n              }\n              charaNum += i + 1\n              newlineFlag = true\n              this.charaLeftSum += this.charaLen - i\n              break\n            }\n            // 文章の最後ならばendFlagをtrueにします\n            if (this.body[charaNum + i] === undefined) {\n              endFlag = true\n              if (i !== 0) {\n                if (i === 1) {\n                  this.highlightChara1.push(this.body[charaNum])\n                  this.trimmed1.push('')\n                  this.highlightChara2.push('')\n                } else if (i === 2) {\n                  this.highlightChara1.push(this.body[charaNum])\n                  this.trimmed1.push('')\n                  this.highlightChara2.push(this.body[charaNum + 1])\n                } else {\n                  this.highlightChara1.push(this.body[charaNum])\n                  this.trimmed1.push(this.body.slice(charaNum + 1, charaNum + i - 1))\n                  this.highlightChara2.push(this.body[charaNum + i - 1])\n                }\n              }\n              break\n            }\n          }\n          // 終了判定をします\n          if (endFlag) {\n            break\n          }\n          // 改行がなければ1行の文字数分追加します\n          if (!newlineFlag) {\n            this.highlightChara1.push(this.body[charaNum])\n            this.trimmed1.push(this.body.slice(charaNum + 1, charaNum + this.charaLen - 1))\n            this.highlightChara2.push(this.body[charaNum + this.charaLen - 1])\n            charaNum += this.charaLen\n          }\n          // 現在の累積文字数がvuexに保存されている読み進めた文字数を越えたらページ数を算出\n          if (!checked) {\n            if (charaNum > nowCharaNum) {\n              this.page = Math.floor(this.trimmed1.length / this.lines)\n              checked = true\n            }\n          }\n        }\n      } else if (this.highlightVer === '1列2分割ハイライト') {\n        const highlightPoint1 = Math.floor(this.charaLen * 0.25)\n        const medium = Math.floor(this.charaLen * 0.5)\n        const highlightPoint2 = Math.floor(this.charaLen * 0.75)\n        while (true) {\n          newlineFlag = false\n          // 1行の文字数分先の間に改行がないかと文章の最後の文字がないかをチェックします\n          for (let i = 0; i < this.charaLen; i++) {\n            // 改行があれば次の行へ\n            if (this.body[charaNum + i] === ' ') {\n              if (i === 0) {\n                this.trimmed1.push('')\n                this.highlightChara1.push('')\n                this.trimmed2.push('')\n                this.highlightChara2.push('')\n                this.trimmed3.push('')\n              } else if (i <= highlightPoint1 + 1) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + i - 1))\n                this.highlightChara1.push(this.body[charaNum + i - 1])\n                this.trimmed2.push('')\n                this.highlightChara2.push('')\n                this.trimmed3.push('')\n              } else if (i < medium) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i))\n                this.highlightChara2.push('')\n                this.trimmed3.push('')\n              } else if (i <= highlightPoint2 + 1) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i - 1))\n                this.highlightChara2.push(this.body[charaNum + i - 1])\n                this.trimmed3.push('')\n              } else {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + i))\n              }\n              charaNum += i + 1\n              newlineFlag = true\n              this.charaLeftSum += this.charaLen - i\n              break\n            }\n            // 文章の最後ならばendFlagをtrueにします\n            if (this.body[charaNum + i] === undefined) {\n              endFlag = true\n              if (i !== 0) {\n                if (i <= highlightPoint1 + 1) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + i - 1))\n                  this.highlightChara1.push(this.body[charaNum + i - 1])\n                  this.trimmed2.push('')\n                  this.highlightChara2.push('')\n                  this.trimmed3.push('')\n                } else if (i < medium) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i))\n                  this.highlightChara2.push('')\n                  this.trimmed3.push('')\n                } else if (i <= highlightPoint2 + 1) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i - 1))\n                  this.highlightChara2.push(this.body[charaNum + i - 1])\n                  this.trimmed3.push('')\n                } else {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                  this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                  this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + i))\n                }\n              }\n              break\n            }\n          }\n          // 終了判定をします\n          if (endFlag) {\n            break\n          }\n          // 改行がなければ1行の文字数分追加します\n          if (!newlineFlag) {\n            this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n            this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n            this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n            this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n            this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + this.charaLen))\n            charaNum += this.charaLen\n          }\n          // 現在の累積文字数がvuexに保存されている読み進めた文字数を越えたらページ数を算出\n          if (!checked) {\n            if (charaNum > nowCharaNum) {\n              this.page = Math.floor(this.trimmed1.length / this.lines)\n              checked = true\n            }\n          }\n        }\n      } else {\n        const highlightPoint1 = Math.floor(this.charaLen * 0.167)\n        const medium1 = Math.floor(this.charaLen * 0.333)\n        const highlightPoint2 = Math.floor(this.charaLen * 0.5)\n        const medium2 = Math.floor(this.charaLen * 0.667)\n        const highlightPoint3 = Math.floor(this.charaLen * 0.833)\n        while (true) {\n          newlineFlag = false\n          // 1行の文字数分先の間に改行がないかと文章の最後の文字がないかをチェックします\n          for (let i = 0; i < this.charaLen; i++) {\n            // 改行があれば次の行へ\n            if (this.body[charaNum + i] === ' ') {\n              if (i === 0) {\n                this.trimmed1.push('')\n                this.highlightChara1.push('')\n                this.trimmed2.push('')\n                this.highlightChara2.push('')\n                this.trimmed3.push('')\n                this.highlightChara3.push('')\n                this.trimmed4.push('')\n              } else if (i <= highlightPoint1 + 1) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + i - 1))\n                this.highlightChara1.push(this.body[charaNum + i - 1])\n                this.trimmed2.push('')\n                this.highlightChara2.push('')\n                this.trimmed3.push('')\n                this.highlightChara3.push('')\n                this.trimmed4.push('')\n              } else if (i < medium1) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i))\n                this.highlightChara2.push('')\n                this.trimmed3.push('')\n                this.highlightChara3.push('')\n                this.trimmed4.push('')\n              } else if (i <= highlightPoint2 + 1) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i - 1))\n                this.highlightChara2.push(this.body[charaNum + i - 1])\n                this.trimmed3.push('')\n                this.highlightChara3.push('')\n                this.trimmed4.push('')\n              } else if (i < medium2) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + i))\n                this.highlightChara3.push('')\n                this.trimmed4.push('')\n              } else if (i <= highlightPoint3 + 1) {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + i - 1))\n                this.highlightChara3.push(this.body[charaNum + i - 1])\n                this.trimmed4.push('')\n              } else {\n                this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + highlightPoint3))\n                this.highlightChara3.push(this.body[charaNum + highlightPoint3])\n                this.trimmed4.push(this.body.slice(charaNum + highlightPoint3 + 1, charaNum + i))\n              }\n              charaNum += i + 1\n              newlineFlag = true\n              this.charaLeftSum += this.charaLen - i\n              break\n            }\n            // 文章の最後ならばendFlagをtrueにします\n            if (this.body[charaNum + i] === undefined) {\n              endFlag = true\n              if (i !== 0) {\n                if (i <= highlightPoint1 + 1) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + i - 1))\n                  this.highlightChara1.push(this.body[charaNum + i - 1])\n                  this.trimmed2.push('')\n                  this.highlightChara2.push('')\n                  this.trimmed3.push('')\n                  this.highlightChara3.push('')\n                  this.trimmed4.push('')\n                } else if (i < medium1) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i))\n                  this.highlightChara2.push('')\n                  this.trimmed3.push('')\n                  this.highlightChara3.push('')\n                  this.trimmed4.push('')\n                } else if (i <= highlightPoint2 + 1) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + i - 1))\n                  this.highlightChara2.push(this.body[charaNum + i - 1])\n                  this.trimmed3.push('')\n                  this.highlightChara3.push('')\n                  this.trimmed4.push('')\n                } else if (i < medium2) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                  this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                  this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + i))\n                  this.highlightChara3.push('')\n                  this.trimmed4.push('')\n                } else if (i <= highlightPoint3 + 1) {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                  this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                  this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + i - 1))\n                  this.highlightChara3.push(this.body[charaNum + i - 1])\n                  this.trimmed4.push('')\n                } else {\n                  this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n                  this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n                  this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n                  this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n                  this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + highlightPoint3))\n                  this.highlightChara3.push(this.body[charaNum + highlightPoint3])\n                  this.trimmed4.push(this.body.slice(charaNum + highlightPoint3 + 1, charaNum + i))\n                }\n              }\n              break\n            }\n          }\n          // 終了判定をします\n          if (endFlag) {\n            break\n          }\n          // 改行がなければ1行の文字数分追加します\n          if (!newlineFlag) {\n            this.trimmed1.push(this.body.slice(charaNum, charaNum + highlightPoint1))\n            this.highlightChara1.push(this.body[charaNum + highlightPoint1])\n            this.trimmed2.push(this.body.slice(charaNum + highlightPoint1 + 1, charaNum + highlightPoint2))\n            this.highlightChara2.push(this.body[charaNum + highlightPoint2])\n            this.trimmed3.push(this.body.slice(charaNum + highlightPoint2 + 1, charaNum + highlightPoint3))\n            this.highlightChara3.push(this.body[charaNum + highlightPoint3])\n            this.trimmed4.push(this.body.slice(charaNum + highlightPoint3 + 1, charaNum + this.charaLen))\n            charaNum += this.charaLen\n          }\n          // 現在の累積文字数がvuexに保存されている読み進めた文字数を越えたらページ数を算出\n          if (!checked) {\n            if (charaNum > nowCharaNum) {\n              this.page = Math.floor(this.trimmed1.length / this.lines)\n              checked = true\n            }\n          }\n        }\n      }\n    },\n    nextPage () {\n      if (this.page + 1 < this.length) {\n        clearInterval(this.intervalId)\n        this.page++\n        this.highlight()\n      }\n    },\n    goTopPage () {\n      clearInterval(this.intervalId)\n      this.page = 0\n      this.highlight()\n    },\n    highlight () {\n      /* ハイライトの初期表示を設定します。 */\n      let n = 0\n      let fromFirstIndex = 0\n      this.highlightStyle1 = []\n      this.highlightStyle2 = []\n      this.highlightStyle3 = []\n      let hasNext = false\n      let endFlag = false\n      for (let i = 0; i < this.lines; i++) {\n        this.highlightStyle1.push({ background: 'none' })\n        this.highlightStyle2.push({ background: 'none' })\n        this.highlightStyle3.push({ background: 'none' })\n      }\n      if (this.highlightChara1[this.page * this.lines] !== '') {\n        this.highlightStyle1[0].background = 'yellow'\n      } else {\n        hasNext = false\n        for (let i = 1; i < this.lines - 1; i++) {\n          if (this.highlightChara1[this.page * this.lines + i] !== '') {\n            n += i\n            this.highlightStyle1[n].background = 'yellow'\n            hasNext = true\n            break\n          }\n        }\n        if (!hasNext) {\n          endFlag = true\n        }\n      }\n      if (this.highlightVer === '1列3分割ハイライト') {\n        /* ハイライトの移動処理を開始します。 */\n        this.intervalId = setInterval(() => {\n          endFlag = false\n          if (n < this.lines) {\n            if (fromFirstIndex === 0) {\n              if (this.highlightChara2[this.page * this.lines + n] !== '') {\n                fromFirstIndex++\n              } else {\n                hasNext = false\n                if (this.highlightChara1[this.page * this.lines + n + 1] === undefined) {\n                  endFlag = true\n                }\n                for (let i = 1; i < this.lines - n; i++) {\n                  if (this.highlightChara1[this.page * this.lines + n + i] !== '') {\n                    n += i\n                    hasNext = true\n                    break\n                  }\n                }\n                if (!hasNext) {\n                  endFlag = true\n                }\n              }\n            } else if (fromFirstIndex === 1) {\n              if (this.highlightChara3[this.page * this.lines + n] !== '') {\n                fromFirstIndex++\n              } else {\n                hasNext = false\n                if (this.highlightChara1[this.page * this.lines + n + 1] === undefined) {\n                  endFlag = true\n                }\n                for (let i = 1; i < this.lines - n; i++) {\n                  if (this.highlightChara1[this.page * this.lines + n + i] !== '') {\n                    n += i\n                    fromFirstIndex = 0\n                    hasNext = true\n                    break\n                  }\n                }\n                if (!hasNext) {\n                  endFlag = true\n                }\n              }\n            } else if (fromFirstIndex === 2) {\n              fromFirstIndex = 0\n              if (this.highlightChara1[this.page * this.lines + n + 1] !== '') {\n                if (this.highlightChara1[this.page * this.lines + n + 1] === undefined) {\n                  endFlag = true\n                } else if (n + 1 === this.lines) {\n                  endFlag = true\n                } else {\n                  n++\n                }\n              } else {\n                hasNext = false\n                for (let i = 1; i < this.lines - 1; i++) {\n                  if (this.highlightChara1[this.page * this.lines + n + i] !== '') {\n                    n += i\n                    hasNext = true\n                    break\n                  }\n                }\n                if (!hasNext) {\n                  endFlag = true\n                }\n              }\n            }\n            if (!endFlag) {\n              for (let i = 0; i < this.lines; i++) {\n                this.highlightStyle1[i].background = 'none'\n                this.highlightStyle2[i].background = 'none'\n                this.highlightStyle3[i].background = 'none'\n              }\n              if (fromFirstIndex === 0) {\n                this.highlightStyle1[n].background = 'yellow'\n              } else if (fromFirstIndex === 1) {\n                this.highlightStyle2[n].background = 'yellow'\n              } else {\n                this.highlightStyle3[n].background = 'yellow'\n              }\n            } else {\n              clearInterval(this.intervalId)\n            }\n          } else {\n            clearInterval(this.intervalId)\n          }\n        }, this.charaLen * (0.33 * 17.91196 * Math.exp(-0.0201 * this.speed)))\n      } else {\n        /* ハイライトの移動処理を開始します。 */\n        this.intervalId = setInterval(() => {\n          console.log([n,fromFirstIndex])\n          endFlag = false\n          if (n < this.lines) {\n            if (fromFirstIndex === 0) {\n              if (this.highlightChara2[this.page * this.lines + n] !== '') {\n                fromFirstIndex++\n              } else {\n                hasNext = false\n                if (this.highlightChara1[this.page * this.lines + n + 1] === undefined) {\n                  endFlag = true\n                }\n                for (let i = 1; i < this.lines - n; i++) {\n                  if (this.highlightChara1[this.page * this.lines + n + i] !== '') {\n                    n += i\n                    hasNext = true\n                    break\n                  }\n                }\n                if (!hasNext) {\n                  endFlag = true\n                }\n              }\n            } else if (fromFirstIndex === 1) {\n              fromFirstIndex = 0\n              if (this.highlightChara1[this.page * this.lines + n + 1] !== '') {\n                if (this.highlightChara1[this.page * this.lines + n + 1] === undefined) {\n                  endFlag = true\n                } else if (n + 1 === this.lines) {\n                  endFlag = true\n                } else {\n                  n++\n                }\n              } else {\n                hasNext = false\n                for (let i = 1; i < this.lines - 1; i++) {\n                  if (this.highlightChara1[this.page * this.lines + n + i] !== '') {\n                    n += i\n                    hasNext = true\n                    break\n                  }\n                }\n                if (!hasNext) {\n                  endFlag = true\n                }\n              }\n            }\n            if (!endFlag) {\n              for (let i = 0; i < this.lines; i++) {\n                this.highlightStyle1[i].background = 'none'\n                this.highlightStyle2[i].background = 'none'\n              }\n              if (fromFirstIndex === 0) {\n                this.highlightStyle1[n].background = 'yellow'\n              } else {\n                this.highlightStyle2[n].background = 'yellow'\n              }\n            } else {\n              clearInterval(this.intervalId)\n            }\n          } else {\n            clearInterval(this.intervalId)\n          }\n        }, this.charaLen * (0.5 * 17.91196 * Math.exp(-0.0201 * this.speed)))\n      }\n    }\n  }\n}\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./sokutore.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./sokutore.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./sokutore.vue?vue&type=template&id=5bdb7e5c&\"\nimport script from \"./sokutore.vue?vue&type=script&lang=js&\"\nexport * from \"./sokutore.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./sokutore.vue?vue&type=style&index=0&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"5e87f8e2\"\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./sokutore.vue?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"43c73608\", content, true, context)\n};","export * from \"-!../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./sokutore.vue?vue&type=style&index=0&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tategaki-wrapper{display:flex;flex-flow:column;align-items:center}.tategaki{-ms-writing-mode:tb-rl;writing-mode:vertical-rl;line-height:2em;letter-spacing:.03em;display:inline-block}.sokutore-wrapper{display:flex;flex-flow:column}.trimmed-wrapper span:first-child{z-index:1;border-radius:50%}.trimmed-wrapper span:nth-child(2){margin-top:-.32em;margin-bottom:-.28em;border-radius:50%}.trimmed-wrapper span:nth-child(3){z-index:1;border-radius:50%}.trimmed-wrapper span:nth-child(4){margin-top:-.32em;margin-bottom:-.28em;border-radius:50%}.trimmed-wrapper span:nth-child(5){z-index:1;border-radius:50%}.trimmed-wrapper span:nth-child(6){margin-top:-.32em;margin-bottom:-.28em;border-radius:50%}.trimmed-wrapper span:nth-child(7){z-index:1;border-radius:50%}.lastSpace{margin-top:.28em}.wrapper-content{border-radius:4px;background:#fff}#sokutore_button{border:.5px solid #3362a8;color:#3362a8;border-radius:8px}.is-size-8-sokutore{font-size:.5em;line-height:6em}.is-size-7-sokutore{line-height:2.5em}.is-size-6-sokutore{line-height:1.8em}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAilhBA;AA7GA;;ACvCA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}